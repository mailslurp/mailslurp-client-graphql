# MailSlurp API
# MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.   ## Resources - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 
# The version of the OpenAPI document: 6.5.2
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

# package mailslurp

# attachment_controller_api

type mutation {
  # Upload an attachment for sending using base64 file encoding
  # When sending emails with attachments first upload each attachment with this endpoint. Record the returned attachment IDs. Then use these attachment IDs in the SendEmailOptions when sending an email. This means that attachments can easily be reused.
  # @param UploadAttachmentOptions uploadOptions uploadOptions
  # @return [[String!]]
  UploadAttachment(uploadOptions: UploadAttachmentOptions): [String!]

  # Upload an attachment for sending using file byte stream input octet stream
  # When sending emails with attachments first upload each attachment with this endpoint. Record the returned attachment IDs. Then use these attachment IDs in the SendEmailOptions when sending an email. This means that attachments can easily be reused.
  # @param String! filename Optional filename to save upload with
  # @return [[String!]]
  UploadAttachmentBytes(filename: String!): [String!]

  # Upload an attachment for sending using Multipart Form
  # When sending emails with attachments first upload each attachment with this endpoint. Record the returned attachment IDs. Then use these attachment IDs in the SendEmailOptions when sending an email. This means that attachments can easily be reused.
  # @param String! file file
  # @param String! contentType contentType
  # @param String! filename filename
  # @param String! xFilename x-filename
  # @return [[String!]]
  UploadMultipartForm(file: String!, contentType: String!, filename: String!, xFilename: String!): [String!]

}

type query {
}

