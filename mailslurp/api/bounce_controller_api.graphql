# MailSlurp API
# MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
# The version of the OpenAPI document: 6.5.2
# Contact: contact@mailslurp.dev
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

# package mailslurp

# bounce_controller_api

type mutation {
  # Filter a list of email recipients and remove those who have bounced
  # Prevent email sending errors by remove recipients who have resulted in past email bounces or complaints
  # @param FilterBouncedRecipientsOptions filterBouncedRecipientsOptions 
  # @return [FilterBouncedRecipientsResult]
  FilterBouncedRecipient(filterBouncedRecipientsOptions: FilterBouncedRecipientsOptions): FilterBouncedRecipientsResult

}

type query {
  # Can account send email
  # Check if account block status prevents sending
  # @return [AccountBounceBlockDto]
  GetAccountBounceBlockStatus(): AccountBounceBlockDto

  # Get a bounced email.
  # Bounced emails are email you have sent that were rejected by a recipient
  # @param ID! Id_ ID of the bounced email to fetch
  # @return [BouncedEmailDto]
  GetBouncedEmail(Id_: ID!): BouncedEmailDto

  # Get paginated list of bounced emails.
  # Bounced emails are email you have sent that were rejected by a recipient
  # @param Int! page Optional page index
  # @param Int! size Optional page size 
  # @param String! sort Optional createdAt sort direction ASC or DESC
  # @param String! since Filter by created at after the given timestamp
  # @param String! before Filter by created at before the given timestamp
  # @return [PageBouncedEmail]
  GetBouncedEmails(page: Int!, size: Int!, sort: String!, since: String!, before: String!): PageBouncedEmail

  # Get a bounced email.
  # Bounced emails are email you have sent that were rejected by a recipient
  # @param ID! Id_ ID of the bounced recipient
  # @return [BouncedRecipientDto]
  GetBouncedRecipient(Id_: ID!): BouncedRecipientDto

  # Get paginated list of bounced recipients.
  # Bounced recipients are email addresses that you have sent emails to that did not accept the sent email. Once a recipient is bounced you cannot send emails to that address.
  # @param Int! page Optional page index 
  # @param Int! size Optional page size 
  # @param String! sort Optional createdAt sort direction ASC or DESC
  # @param String! since Filter by created at after the given timestamp
  # @param String! before Filter by created at before the given timestamp
  # @return [PageBouncedRecipients]
  GetBouncedRecipients(page: Int!, size: Int!, sort: String!, since: String!, before: String!): PageBouncedRecipients

  # Get complaint
  # Get complaint
  # @param ID! Id_ ID of the complaint
  # @return [Complaint]
  GetComplaint(Id_: ID!): Complaint

  # Get paginated list of complaints.
  # SMTP complaints made against your account
  # @param Int! page Optional page index 
  # @param Int! size Optional page size 
  # @param String! sort Optional createdAt sort direction ASC or DESC
  # @param String! since Filter by created at after the given timestamp
  # @param String! before Filter by created at before the given timestamp
  # @return [PageComplaint]
  GetComplaints(page: Int!, size: Int!, sort: String!, since: String!, before: String!): PageComplaint

  # Get paginated list of unsubscribed recipients.
  # Unsubscribed recipient have unsubscribed from a mailing list for a user or domain and cannot be contacted again.
  # @param Int! page Optional page index
  # @param Int! size Optional page size 
  # @param String! sort Optional createdAt sort direction ASC or DESC
  # @param ID! domainId Filter by domainId
  # @return [PageListUnsubscribeRecipients]
  GetListUnsubscribeRecipients(page: Int!, size: Int!, sort: String!, domainId: ID!): PageListUnsubscribeRecipients

}

