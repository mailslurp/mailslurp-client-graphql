# MailSlurp API
# MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository
# The version of the OpenAPI document: 6.5.2
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

# package mailslurp

# bounce_controller_api

type mutation {
}

type query {
  # Get a bounced email.
  # Bounced emails are email you have sent that were rejected by a recipient
  # @param ID! Id_ ID of the bounced email to fetch
  # @return [BouncedEmailDto]
  GetBouncedEmail(Id_: ID!): BouncedEmailDto

  # Get paginated list of bounced emails.
  # Bounced emails are email you have sent that were rejected by a recipient
  # @param String! before Filter by created at before the given timestamp
  # @param Int! page Optional page index 
  # @param String! since Filter by created at after the given timestamp
  # @param Int! size Optional page size 
  # @param String! sort Optional createdAt sort direction ASC or DESC
  # @return [PageBouncedEmail]
  GetBouncedEmails(before: String!, page: Int!, since: String!, size: Int!, sort: String!): PageBouncedEmail

  # Get a bounced email.
  # Bounced emails are email you have sent that were rejected by a recipient
  # @param ID! Id_ ID of the bounced recipient
  # @return [BouncedRecipientDto]
  GetBouncedRecipient(Id_: ID!): BouncedRecipientDto

  # Get paginated list of bounced recipients.
  # Bounced recipients are email addresses that you have sent emails to that did not accept the sent email. Once a recipient is bounced you cannot send emails to that address.
  # @param String! before Filter by created at before the given timestamp
  # @param Int! page Optional page index 
  # @param String! since Filter by created at after the given timestamp
  # @param Int! size Optional page size 
  # @param String! sort Optional createdAt sort direction ASC or DESC
  # @return [PageBouncedRecipients]
  GetBouncedRecipients(before: String!, page: Int!, since: String!, size: Int!, sort: String!): PageBouncedRecipients

}

