# MailSlurp API
# MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
# The version of the OpenAPI document: 6.5.2
# Contact: contact@mailslurp.dev
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

# package mailslurp

# connector_controller_api

type mutation {
  # Create an inbox connector
  # Sync emails between external mailboxes and MailSlurp inboxes
  # @param CreateConnectorOptions createConnectorOptions 
  # @return [ConnectorDto]
  CreateConnector(createConnectorOptions: CreateConnectorOptions): ConnectorDto

  # Delete all inbox connectors
  # @return [null]
  DeleteAllConnector(): null

  # Delete an inbox connector
  # @param ID! Id_ 
  # @return [null]
  DeleteConnector(Id_: ID!): null

  # Sync an inbox connector
  # @param ID! Id_ 
  # @return [ConnectorSyncRequestResult]
  SyncConnector(Id_: ID!): ConnectorSyncRequestResult

  # Update an inbox connector
  # @param ID! Id_ 
  # @param CreateConnectorOptions createConnectorOptions 
  # @return [ConnectorDto]
  UpdateConnector(Id_: ID!, createConnectorOptions: CreateConnectorOptions): ConnectorDto

}

type query {
  # Get all inbox connector sync events
  # @param Int! page Optional page index in connector list pagination
  # @param Int! size Optional page size in connector list pagination
  # @param String! sort Optional createdAt sort direction ASC or DESC
  # @param String! since Filter by created at after the given timestamp
  # @param String! before Filter by created at before the given timestamp
  # @return [PageConnectorSyncEvents]
  GetAllConnectorSyncEvents(page: Int!, size: Int!, sort: String!, since: String!, before: String!): PageConnectorSyncEvents

  # Get an inbox connector
  # @param ID! Id_ 
  # @return [ConnectorDto]
  GetConnector(Id_: ID!): ConnectorDto

  # Get an inbox connector sync event
  # @param ID! Id_ 
  # @return [ConnectorSyncEventDto]
  GetConnectorSyncEvent(Id_: ID!): ConnectorSyncEventDto

  # Get an inbox connector sync events
  # @param ID! Id_ 
  # @param Int! page Optional page index in connector list pagination
  # @param Int! size Optional page size in connector list pagination
  # @param String! sort Optional createdAt sort direction ASC or DESC
  # @param String! since Filter by created at after the given timestamp
  # @param String! before Filter by created at before the given timestamp
  # @return [PageConnectorSyncEvents]
  GetConnectorSyncEvents(Id_: ID!, page: Int!, size: Int!, sort: String!, since: String!, before: String!): PageConnectorSyncEvents

  # Get inbox connectors
  # List inbox connectors that sync external emails to MailSlurp inboxes
  # @param Int! page Optional page index in connector list pagination
  # @param Int! size Optional page size in connector list pagination
  # @param String! sort Optional createdAt sort direction ASC or DESC
  # @param String! since Filter by created at after the given timestamp
  # @param String! before Filter by created at before the given timestamp
  # @return [PageConnector]
  GetConnectors(page: Int!, size: Int!, sort: String!, since: String!, before: String!): PageConnector

}

