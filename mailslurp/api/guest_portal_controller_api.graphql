# MailSlurp API
# MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
# The version of the OpenAPI document: 6.5.2
# Contact: contact@mailslurp.dev
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

# package mailslurp

# guest_portal_controller_api

type mutation {
  # Create a portal page for your customers or clients to log into email accounts and view emails.
  # Create a guest login page for customers or clients to access assigned email addresses
  # @param CreatePortalOptions createPortalOptions 
  # @return [GuestPortalDto]
  CreateGuestPortal(createPortalOptions: CreatePortalOptions): GuestPortalDto

  # Create a portal guest user
  # Add customer to portal
  # @param ID! portalId 
  # @param CreatePortalUserOptions createPortalUserOptions 
  # @return [GuestPortalUserCreateDto]
  CreateGuestPortalUser(portalId: ID!, createPortalUserOptions: CreatePortalUserOptions): GuestPortalUserCreateDto

}

type query {
  # Get all guest users for portal
  # Get all customers for a portal
  # @param ID! portalId Optional portal ID
  # @param String! search Optional search term
  # @param Int! page Optional page index in list pagination
  # @param Int! size Optional page size in list pagination
  # @param String! sort Optional createdAt sort direction ASC or DESC
  # @param String! since Filter by created at after the given timestamp
  # @param String! before Filter by created at before the given timestamp
  # @return [PageGuestPortalUsers]
  GetAllGuestPortalUsers(portalId: ID!, search: String!, page: Int!, size: Int!, sort: String!, since: String!, before: String!): PageGuestPortalUsers

  # Get a client email portal
  # Fetch a customer guest portal
  # @param ID! portalId 
  # @return [GuestPortalDto]
  GetGuestPortal(portalId: ID!): GuestPortalDto

  # Get guest user for portal
  # Get customer for portal
  # @param ID! portalId 
  # @param ID! guestId 
  # @return [GuestPortalUserDto]
  GetGuestPortalUser(portalId: ID!, guestId: ID!): GuestPortalUserDto

  # Get guest user
  # Get customer by ID
  # @param ID! guestId 
  # @return [GuestPortalUserDto]
  GetGuestPortalUserById(guestId: ID!): GuestPortalUserDto

  # Get all guest users for portal
  # Get customers for a portal
  # @param ID! portalId 
  # @param String! search Optional search term
  # @param Int! page Optional page index in list pagination
  # @param Int! size Optional page size in list pagination
  # @param String! sort Optional createdAt sort direction ASC or DESC
  # @param String! since Filter by created at after the given timestamp
  # @param String! before Filter by created at before the given timestamp
  # @return [PageGuestPortalUsers]
  GetGuestPortalUsers(portalId: ID!, search: String!, page: Int!, size: Int!, sort: String!, since: String!, before: String!): PageGuestPortalUsers

  # Get guest portals
  # Get portals
  # @return [[GuestPortalDto]]
  GetGuestPortals(): [GuestPortalDto]

}

