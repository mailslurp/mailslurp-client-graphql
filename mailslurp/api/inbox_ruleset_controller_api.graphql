# MailSlurp API
# MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 
# The version of the OpenAPI document: 6.5.2
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

# package mailslurp

# inbox_ruleset_controller_api

type mutation {
  # Create an inbox ruleset
  # Create a new inbox rule for forwarding, blocking, and allowing emails when sending and receiving
  # @param CreateInboxRulesetOptions createInboxRulesetOptions createInboxRulesetOptions
  # @param ID! inboxId Inbox id to attach ruleset to
  # @return [InboxRulesetDto]
  CreateNewInboxRuleset(createInboxRulesetOptions: CreateInboxRulesetOptions, inboxId: ID!): InboxRulesetDto

  # Delete an inbox ruleset
  # Delete inbox ruleset
  # @param ID! Id_ ID of inbox ruleset
  # @return [null]
  DeleteInboxRuleset(Id_: ID!): null

  # Delete inbox rulesets
  # Delete inbox rulesets. Accepts optional inboxId filter.
  # @param ID! inboxId Optional inbox id to attach ruleset to
  # @return [null]
  DeleteInboxRulesets(inboxId: ID!): null

  # Test an inbox ruleset
  # Test an inbox ruleset
  # @param ID! Id_ ID of inbox ruleset
  # @param InboxRulesetTestOptions inboxRulesetTestOptions inboxRulesetTestOptions
  # @return [InboxRulesetTestResult]
  TestInboxRuleset(Id_: ID!, inboxRulesetTestOptions: InboxRulesetTestOptions): InboxRulesetTestResult

  # Test inbox rulesets for inbox
  # Test inbox rulesets for inbox
  # @param ID! inboxId ID of inbox
  # @param InboxRulesetTestOptions inboxRulesetTestOptions inboxRulesetTestOptions
  # @return [InboxRulesetTestResult]
  TestInboxRulesetsForInbox(inboxId: ID!, inboxRulesetTestOptions: InboxRulesetTestOptions): InboxRulesetTestResult

  # Test new inbox ruleset
  # Test new inbox ruleset
  # @param TestNewInboxRulesetOptions testNewInboxRulesetOptions testNewInboxRulesetOptions
  # @return [InboxRulesetTestResult]
  TestNewInboxRuleset(testNewInboxRulesetOptions: TestNewInboxRulesetOptions): InboxRulesetTestResult

}

type query {
  # Get an inbox ruleset
  # Get inbox ruleset
  # @param ID! Id_ ID of inbox ruleset
  # @return [InboxRulesetDto]
  GetInboxRuleset(Id_: ID!): InboxRulesetDto

  # List inbox rulesets
  # List all rulesets attached to an inbox
  # @param ID! inboxId Optional inbox id to get rulesets from
  # @param Int! page Optional page index in inbox ruleset list pagination
  # @param String! searchFilter Optional search filter
  # @param Int! size Optional page size in inbox ruleset list pagination
  # @param String! sort Optional createdAt sort direction ASC or DESC
  # @return [PageInboxRulesetDto]
  GetInboxRulesets(inboxId: ID!, page: Int!, searchFilter: String!, size: Int!, sort: String!): PageInboxRulesetDto

}

