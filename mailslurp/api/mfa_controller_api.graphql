# MailSlurp API
# MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
# The version of the OpenAPI document: 6.5.2
# Contact: contact@mailslurp.dev
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

# package mailslurp

# mfa_controller_api

type mutation {
  # Create a TOTP device from custom options
  # Create a virtual TOTP device for custom options specifying all parameters of the TOTP device.
  # @param CreateTotpDeviceOtpAuthUrlOptions createTotpDeviceOtpAuthUrlOptions 
  # @return [TotpDeviceDto]
  CreateTotpDeviceForCustom(createTotpDeviceOtpAuthUrlOptions: CreateTotpDeviceOtpAuthUrlOptions): TotpDeviceDto

  # Create a TOTP device from an OTP Auth URL
  # Create a virtual TOTP device for a given OTP Auth URL such as otpauth://totp/MyApp:alice@example.com?secret&#x3D;ABC123&amp;issuer&#x3D;MyApp&amp;period&#x3D;30&amp;digits&#x3D;6&amp;algorithm&#x3D;SHA1. You can provider overrides in the options for each component of the URL.
  # @param CreateTotpDeviceOtpAuthUrlOptions createTotpDeviceOtpAuthUrlOptions 
  # @return [TotpDeviceDto]
  CreateTotpDeviceForOtpAuthUrl(createTotpDeviceOtpAuthUrlOptions: CreateTotpDeviceOtpAuthUrlOptions): TotpDeviceDto

}

type query {
  # Get a TOTP device by ID
  # Get Time-Based One-Time Password (TOTP) device by its ID.
  # @param ID! Id_ 
  # @return [TotpDeviceDto]
  GetTotpDevice(Id_: ID!): TotpDeviceDto

  # Get a TOTP device by username, issuer, or name. Returns empty if not found.
  # Get Time-Based One-Time Password (TOTP) device by its username and issuer mapping.
  # @param String! name Optional name filter
  # @param String! issuer Optional issuer filter
  # @param String! username Optional username filter
  # @return [TotpDeviceOptionalDto]
  GetTotpDeviceBy(name: String!, issuer: String!, username: String!): TotpDeviceOptionalDto

  # Get a TOTP device code by device ID
  # Get Time-Based One-Time Password for a device by its ID.
  # @param ID! Id_ ID of the TOTP device to get the code for
  # @param String! at Optional time to get code for. If not provided, current time is used.
  # @param Int! minSecondsUntilExpire Optional minimum time until code expires. Will hold thread open until period reached.
  # @return [TotpDeviceCodeDto]
  GetTotpDeviceCode(Id_: ID!, at: String!, minSecondsUntilExpire: Int!): TotpDeviceCodeDto

}

