# MailSlurp API
# MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
# The version of the OpenAPI document: 6.5.2
# Contact: contact@mailslurp.dev
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

# package mailslurp

# missed_email_controller_api

type mutation {
  # Restore missed emails
  # If emails were missed due to a plan limit they are saved as missed emails. If support team enables the canRestore flag these emails can be reload into your account using this method.
  # @return [null]
  RestoreMissedEmails(): null

}

type query {
  # Get all MissedEmails in paginated format
  # @param Int! page Optional page index in list pagination
  # @param Int! size Optional page size in list pagination
  # @param String! sort Optional createdAt sort direction ASC or DESC
  # @param String! searchFilter Optional search filter
  # @param String! since Filter by created at after the given timestamp
  # @param String! before Filter by created at before the given timestamp
  # @param ID! inboxId Optional inbox ID filter
  # @return [PageMissedEmailProjection]
  GetAllMissedEmails(page: Int!, size: Int!, sort: String!, searchFilter: String!, since: String!, before: String!, inboxId: ID!): PageMissedEmailProjection

  # Get all unknown missed emails in paginated format
  # Unknown missed emails are emails that were sent to MailSlurp but could not be assigned to an existing inbox.
  # @param Int! page Optional page index in list pagination
  # @param Int! size Optional page size in list pagination
  # @param String! sort Optional createdAt sort direction ASC or DESC
  # @param String! searchFilter Optional search filter
  # @param String! since Filter by created at after the given timestamp
  # @param String! before Filter by created at before the given timestamp
  # @param ID! inboxId Optional inbox ID filter
  # @return [PageUnknownMissedEmailProjection]
  GetAllUnknownMissedEmails(page: Int!, size: Int!, sort: String!, searchFilter: String!, since: String!, before: String!, inboxId: ID!): PageUnknownMissedEmailProjection

  # Get MissedEmail
  # List emails that were missed due to plan limits.
  # @param ID! missedEmailId 
  # @return [MissedEmail]
  GetMissedEmail(missedEmailId: ID!): MissedEmail

  # Wait for Nth missed email
  # Wait for 0 based index missed email
  # @param Int! index Zero based index of the email to wait for. If 1 missed email already and you want to wait for the 2nd email pass index&#x3D;1
  # @param ID! inboxId Optional inbox ID filter
  # @param Int! timeout Optional timeout milliseconds
  # @param String! since Filter by created at after the given timestamp
  # @param String! before Filter by created at before the given timestamp
  # @return [MissedEmail]
  WaitForNthMissedEmail(index: Int!, inboxId: ID!, timeout: Int!, since: String!, before: String!): MissedEmail

}

