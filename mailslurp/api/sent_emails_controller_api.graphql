# MailSlurp API
# MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository
# The version of the OpenAPI document: 6.5.2
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

# package mailslurp

# sent_emails_controller_api

type mutation {
  # Delete all sent email receipts
  # @return [null]
  DeleteAllSentEmails(): null

  # Delete sent email receipt
  # @param ID! Id_ 
  # @return [null]
  DeleteSentEmail(Id_: ID!): null

}

type query {
  # Get all sent email tracking pixels in paginated form
  # @param Int! page Optional page index in sent email tracking pixel list pagination
  # @param Int! size Optional page size in sent email tracking pixel list pagination
  # @param String! sort Optional createdAt sort direction ASC or DESC
  # @param String! searchFilter Optional search filter
  # @param String! since Filter by created at after the given timestamp
  # @param String! before Filter by created at before the given timestamp
  # @return [PageTrackingPixelProjection]
  GetAllSentTrackingPixels(page: Int!, size: Int!, sort: String!, searchFilter: String!, since: String!, before: String!): PageTrackingPixelProjection

  # Get sent email receipt
  # @param ID! Id_ 
  # @return [SentEmailDto]
  GetSentEmail(Id_: ID!): SentEmailDto

  # Get sent email HTML content
  # @param ID! Id_ 
  # @return [String!]
  GetSentEmailHTMLContent(Id_: ID!): String!

  # Get all tracking pixels for a sent email in paginated form
  # @param ID! Id_ 
  # @param Int! page Optional page index in sent email tracking pixel list pagination
  # @param Int! size Optional page size in sent email tracking pixel list pagination
  # @param String! sort Optional createdAt sort direction ASC or DESC
  # @param String! searchFilter Optional search filter
  # @param String! since Filter by created at after the given timestamp
  # @param String! before Filter by created at before the given timestamp
  # @return [PageTrackingPixelProjection]
  GetSentEmailTrackingPixels(Id_: ID!, page: Int!, size: Int!, sort: String!, searchFilter: String!, since: String!, before: String!): PageTrackingPixelProjection

  # Get all sent emails in paginated form
  # @param ID! inboxId Optional inboxId to filter sender of sent emails by
  # @param Int! page Optional page index in inbox sent email list pagination
  # @param Int! size Optional page size in inbox sent email list pagination
  # @param String! sort Optional createdAt sort direction ASC or DESC
  # @param String! searchFilter Optional search filter
  # @param String! since Filter by created at after the given timestamp
  # @param String! before Filter by created at before the given timestamp
  # @return [PageSentEmailProjection]
  GetSentEmails(inboxId: ID!, page: Int!, size: Int!, sort: String!, searchFilter: String!, since: String!, before: String!): PageSentEmailProjection

  # Get all sent organization emails in paginated form
  # @param ID! inboxId Optional inboxId to filter sender of sent emails by
  # @param Int! page Optional page index in sent email list pagination
  # @param Int! size Optional page size in sent email list pagination
  # @param String! sort Optional createdAt sort direction ASC or DESC
  # @param String! searchFilter Optional search filter
  # @param String! since Filter by created at after the given timestamp
  # @param String! before Filter by created at before the given timestamp
  # @return [PageSentEmailProjection]
  GetSentOrganizationEmails(inboxId: ID!, page: Int!, size: Int!, sort: String!, searchFilter: String!, since: String!, before: String!): PageSentEmailProjection

}

