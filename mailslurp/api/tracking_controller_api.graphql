# MailSlurp API
# MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository
# The version of the OpenAPI document: 6.5.2
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

# package mailslurp

# tracking_controller_api

type mutation {
  # Create tracking pixel
  # Create a tracking pixel. A tracking pixel is an image that can be embedded in an email. When the email is viewed and the image is seen MailSlurp will mark the pixel as seen. Use tracking pixels to monitor email open events. You can receive open notifications via webhook or by fetching the pixel.
  # @param CreateTrackingPixelOptions createTrackingPixelOptions createTrackingPixelOptions
  # @return [TrackingPixelDto]
  CreateTrackingPixel(createTrackingPixelOptions: CreateTrackingPixelOptions): TrackingPixelDto

}

type query {
  # Get tracking pixels
  # List tracking pixels in paginated form
  # @param String! before Filter by created at before the given timestamp
  # @param Int! page Optional page index in list pagination
  # @param String! searchFilter Optional search filter
  # @param String! since Filter by created at after the given timestamp
  # @param Int! size Optional page size in list pagination
  # @param String! sort Optional createdAt sort direction ASC or DESC
  # @return [PageTrackingPixelProjection]
  GetAllTrackingPixels(before: String!, page: Int!, searchFilter: String!, since: String!, size: Int!, sort: String!): PageTrackingPixelProjection

  # Get pixel
  # @param ID! Id_ id
  # @return [TrackingPixelDto]
  GetTrackingPixel(Id_: ID!): TrackingPixelDto

}

