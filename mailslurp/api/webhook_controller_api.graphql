# MailSlurp API
# MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository
# The version of the OpenAPI document: 6.5.2
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

# package mailslurp

# webhook_controller_api

type mutation {
  # Attach a WebHook URL to an inbox
  # Get notified whenever an inbox receives an email via a WebHook URL. An emailID will be posted to this URL every time an email is received for this inbox. The URL must be publicly reachable by the MailSlurp server. You can provide basicAuth values if you wish to secure this endpoint.
  # @param ID! inboxId inboxId
  # @param CreateWebhookOptions webhookOptions webhookOptions
  # @return [WebhookDto]
  CreateWebhook(inboxId: ID!, webhookOptions: CreateWebhookOptions): WebhookDto

  # Delete and disable a Webhook for an Inbox
  # @param ID! inboxId inboxId
  # @param ID! webhookId webhookId
  # @return [null]
  DeleteWebhook(inboxId: ID!, webhookId: ID!): null

  # Get a webhook result and try to resend the original webhook payload
  # Allows you to resend a webhook payload that was already sent. Webhooks that fail are retried automatically for 24 hours and then put in a dead letter queue. You can retry results manually using this method.
  # @param ID! webhookResultId Webhook Result ID
  # @return [WebhookRedriveResult]
  RedriveWebhookResult(webhookResultId: ID!): WebhookRedriveResult

  # Send webhook test data
  # @param ID! webhookId webhookId
  # @return [WebhookTestResult]
  SendTestData(webhookId: ID!): WebhookTestResult

}

type query {
  # Get results for all webhooks
  # @param Int! page Optional page index in list pagination
  # @param String! searchFilter Optional search filter
  # @param Int! size Optional page size in list pagination
  # @param String! sort Optional createdAt sort direction ASC or DESC
  # @return [PageWebhookResult]
  GetAllWebhookResults(page: Int!, searchFilter: String!, size: Int!, sort: String!): PageWebhookResult

  # List Webhooks Paginated
  # List webhooks in paginated form. Allows for page index, page size, and sort direction.
  # @param Int! page Optional page index in list pagination
  # @param String! searchFilter Optional search filter
  # @param Int! size Optional page size for paginated result list.
  # @param String! sort Optional createdAt sort direction ASC or DESC
  # @return [PageWebhookProjection]
  GetAllWebhooks(page: Int!, searchFilter: String!, size: Int!, sort: String!): PageWebhookProjection

  # Get paginated webhooks for an Inbox
  # @param ID! inboxId inboxId
  # @param Int! page Optional page index in list pagination
  # @param String! searchFilter Optional search filter
  # @param Int! size Optional page size in list pagination
  # @param String! sort Optional createdAt sort direction ASC or DESC
  # @return [PageWebhookProjection]
  GetInboxWebhooksPaginated(inboxId: ID!, page: Int!, searchFilter: String!, size: Int!, sort: String!): PageWebhookProjection

  # Get test webhook payload example. Response content depends on eventName passed. Uses &#x60;EMAIL_RECEIVED&#x60; as default.
  # @param String! eventName eventName
  # @return [AbstractWebhookPayload]
  GetTestWebhookPayload(eventName: String!): AbstractWebhookPayload

  # Get webhook test payload for email opened event
  # @return [WebhookEmailOpenedPayload]
  GetTestWebhookPayloadEmailOpened(): WebhookEmailOpenedPayload

  # Get webhook test payload for email opened event
  # @return [WebhookEmailReadPayload]
  GetTestWebhookPayloadEmailRead(): WebhookEmailReadPayload

  # Get webhook test payload for new attachment event
  # @return [WebhookNewAttachmentPayload]
  GetTestWebhookPayloadNewAttachment(): WebhookNewAttachmentPayload

  # Get webhook test payload for new contact event
  # @return [WebhookNewContactPayload]
  GetTestWebhookPayloadNewContact(): WebhookNewContactPayload

  # Get webhook test payload for new email event
  # @return [WebhookNewEmailPayload]
  GetTestWebhookPayloadNewEmail(): WebhookNewEmailPayload

  # Get a webhook for an Inbox
  # @param ID! webhookId webhookId
  # @return [WebhookDto]
  GetWebhook(webhookId: ID!): WebhookDto

  # Get a webhook result for a webhook
  # @param ID! webhookResultId Webhook Result ID
  # @return [WebhookResultDto]
  GetWebhookResult(webhookResultId: ID!): WebhookResultDto

  # Get a webhook results for a webhook
  # @param ID! webhookId ID of webhook to get results for
  # @param Int! page Optional page index in list pagination
  # @param String! searchFilter Optional search filter
  # @param Int! size Optional page size in list pagination
  # @param String! sort Optional createdAt sort direction ASC or DESC
  # @return [PageWebhookResult]
  GetWebhookResults(webhookId: ID!, page: Int!, searchFilter: String!, size: Int!, sort: String!): PageWebhookResult

  # Get all webhooks for an Inbox
  # @param ID! inboxId inboxId
  # @return [[WebhookDto]]
  GetWebhooks(inboxId: ID!): [WebhookDto]

}

