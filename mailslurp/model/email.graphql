# MailSlurp API
# MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 
# The version of the OpenAPI document: 6.5.2
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

# Email entity (also known as EmailDto). When an SMTP email message is received by MailSlurp it is parsed. The body and attachments are written to disk and the fields such as to, from, subject etc are stored in a database. The &#x60;body&#x60; contains the email content. If you want the original SMTP message see the &#x60;getRawEmail&#x60; endpoints. The attachments can be fetched using the AttachmentController
type Email {

  analysis: EmailAnalysis

  # List of IDs of attachments found in the email. Use these IDs with the Inbox and Email Controllers to download attachments and attachment meta data such as filesize, name, extension.
  attachments: [String!]

  # List of &#x60;BCC&#x60; recipients email was addressed to
  bcc: [String!]

  # The body of the email message
  body: String!

  # A hash signature of the email message
  bodyMD5Hash: String!

  # List of &#x60;CC&#x60; recipients email was addressed to
  cc: [String!]

  # Detected character set of the email body such as UTF-8
  charset: String!

  # When was the email received by MailSlurp
  createdAt: String!

  # Who the email was sent from
  from: String!

  # Collection of SMTP headers attached to email
  headers: String!

  # ID of the email entity
  id: ID!

  # ID of the inbox that received the email
  inboxId: ID!

  # Is the email body HTML
  isHTML: Boolean!

  # Read flag. Has the email ever been viewed in the dashboard or fetched via the API? If so the email is marked as read.
  read: Boolean!

  # The &#x60;replyTo&#x60; field on the received email message
  replyTo: String!

  # The subject line of the email message
  subject: String!

  # Can the email be accessed by organization team members
  teamAccess: Boolean!

  # List of &#x60;To&#x60; recipients that email was addressed to
  to: [String!]

  # When was the email last updated
  updatedAt: String!

  # ID of user that email belongs to
  userId: ID!

}
