# MailSlurp API
# MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
# The version of the OpenAPI document: 6.5.2
# Contact: contact@mailslurp.dev
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

# Representation of a webhook for an inbox. The URL specified will be using by MailSlurp whenever an email is received by the attached inbox. A webhook entity should have a URL that points to your server. Your server should accept HTTP/S POST requests and return a success 200. MailSlurp will retry your webhooks if they fail. See https://api.mailslurp.com/schemas/webhook-payload for the payload schema.
type WebhookDto {

  # ID of the Webhook
  id: ID!

  # User ID of the Webhook
  userId: ID!

  # Does webhook expect basic authentication? If true it means you created this webhook with a username and password. MailSlurp will use these in the URL to authenticate itself.
  basicAuth: Boolean!

  # Name of the webhook
  name: String

  # The phoneNumberId that the Webhook will be triggered by. If null then webhook triggered at account level or inbox level if inboxId set
  phoneId: ID

  # The inbox that the Webhook will be triggered by. If null then webhook triggered at account level or phone level if phoneId set
  inboxId: ID

  # Request body template for HTTP request that will be sent for the webhook. Use Moustache style template variables to insert values from the original event payload.
  requestBodyTemplate: String

  # URL of your server that the webhook will be sent to. The schema of the JSON that is sent is described by the payloadJsonSchema.
  url: String!

  # HTTP method that your server endpoint must listen for
  method: Method

  # Deprecated. Fetch JSON Schema for webhook using the getJsonSchemaForWebhookPayload method
  payloadJsonSchema: String!

  # When the webhook was created
  createdAt: String

  updatedAt: String!

  # Webhook trigger event name
  eventName: EventName

  requestHeaders: WebhookHeaders

  # Should notifier ignore insecure SSL certificates
  ignoreInsecureSslCertificates: Boolean

  # Should notifier use static IP range when sending webhook payload
  useStaticIpRange: Boolean

}

# HTTP method that your server endpoint must listen for
enum Method {
  POST
  DELETE
  GET
  PUT
  PATCH
  HEAD
  OPTIONS
  TRACE
}

# Webhook trigger event name
enum EventName {
  EMAIL_RECEIVED
  NEW_EMAIL
  NEW_CONTACT
  NEW_ATTACHMENT
  EMAIL_OPENED
  EMAIL_READ
  DELIVERY_STATUS
  BOUNCE
  BOUNCE_RECIPIENT
  NEW_SMS
}
