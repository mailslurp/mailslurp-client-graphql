# MailSlurp API
# MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 
# The version of the OpenAPI document: 6.5.2
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

# Representation of a webhook for an inbox. The URL specified will be using by MailSlurp whenever an email is received by the attached inbox. A webhook entity should have a URL that points to your server. Your server should accept HTTP/S POST requests and return a success 200. MailSlurp will retry your webhooks if they fail. See https://api.mailslurp.com/schemas/webhook-payload for the payload schema.
type WebhookDto {

  # Does webhook expect basic authentication? If true it means you created this webhook with a username and password. MailSlurp will use these in the URL to authenticate itself.
  basicAuth: Boolean!

  # When the webhook was created
  createdAt: String!

  eventName: EventName

  # ID of the Webhook
  id: ID!

  # The inbox that the Webhook will be triggered by
  inboxId: ID!

  # HTTP method that your server endpoint must listen for
  method: Method

  # Name of the webhook
  name: String!

  # JSON Schema for the payload that will be sent to your URL via the HTTP method described.
  payloadJsonSchema: String!

  updatedAt: String!

  # URL of your server that the webhook will be sent to. The schema of the JSON that is sent is described by the payloadJsonSchema.
  url: String!

}

enum EventName {
  EMAIL_RECEIVED
  NEW_EMAIL
  NEW_CONTACT
  NEW_ATTACHMENT
}

# HTTP method that your server endpoint must listen for
enum Method {
  GET
  HEAD
  POST
  PUT
  PATCH
  DELETE
  OPTIONS
  TRACE
}
