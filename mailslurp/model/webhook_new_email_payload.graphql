# MailSlurp API
# MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
# The version of the OpenAPI document: 6.5.2
# Contact: contact@mailslurp.dev
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

# NEW_EMAIL webhook payload. Sent to your webhook url endpoint via HTTP POST when an email is received by the inbox that your webhook is attached to. Use the email ID to fetch the full email body or attachments.
type WebhookNewEmailPayload {

  # Idempotent message ID. Store this ID locally or in a database to prevent message duplication.
  messageId: String!

  # ID of webhook entity being triggered
  webhookId: ID!

  # Name of the event type webhook is being triggered for.
  eventName: EventName

  # Name of the webhook being triggered
  webhookName: String!

  # Id of the inbox
  inboxId: ID!

  # Id of the domain that received an email
  domainId: ID!

  # ID of the email that was received. Use this ID for fetching the email with the &#x60;EmailController&#x60;.
  emailId: ID!

  # Date time of event creation
  createdAt: String!

  # List of &#x60;To&#x60; recipient email addresses that the email was addressed to. See recipients object for names.
  to: [String!]

  # Who the email was sent from. An email address - see fromName for the sender name.
  from: String!

  # List of &#x60;CC&#x60; recipients email addresses that the email was addressed to. See recipients object for names.
  cc: [String!]

  # List of &#x60;BCC&#x60; recipients email addresses that the email was addressed to. See recipients object for names.
  bcc: [String!]

  # The subject line of the email message as specified by SMTP subject header
  subject: String!

  # List of attachment meta data objects if attachments present
  attachmentMetaDatas: [AttachmentMetaData]

}

# Name of the event type webhook is being triggered for.
enum EventName {
  EMAIL_RECEIVED
  NEW_EMAIL
  NEW_CONTACT
  NEW_ATTACHMENT
  EMAIL_OPENED
  EMAIL_READ
  DELIVERY_STATUS
  BOUNCE
  BOUNCE_RECIPIENT
  NEW_SMS
}
